@page "/vacancies/edit/{vacancyId:guid}"

@using System.Net.Http.Json
@using ERP.BlazorUI.Components.Pages.Department.Training.DTO
@using MudBlazor
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject HttpClient Http

<h3>Edit Vacancy</h3>

@if (vacancy != null)
{
    <MudForm>
        <MudSelect T="string" Label="Title" @bind-Value="vacancy.Title" Required="true">
            @foreach (var category in categories)
            {
                <MudSelectItem Value="@category">@category</MudSelectItem>
            }
        </MudSelect>
        <MudTextField @bind-Value="vacancy.Description" Label="Description" Required="true" />
        <MudTextField @bind-Value="vacancy.Company" Label="Company" Required="true" />
        <MudButton OnClick="SaveChanges" Color="Color.Primary">Save</MudButton>
        <MudButton OnClick="BackToList" Color="Color.Secondary">Cancel</MudButton>
    </MudForm>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter] public Guid vacancyId { get; set; }
    private InternshipVacancyResponse vacancy;
    private List<string> categories = new List<string>
    {
        "Software Engineer",
        "Embedded System Engineer",
        "Data Scientist",
        "Machine Learning Engineer",
        "DevOps Engineer",
        "Frontend Developer",
        "Backend Developer",
        "Full Stack Developer",
        "Cybersecurity Engineer",
        "Network Engineer"
    };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            vacancy = await Http.GetFromJsonAsync<InternshipVacancyResponse>($"https://localhost:7270/api/InternshipVacancy/{vacancyId}");
        }
        catch (Exception ex)
        {
            Snackbar.Add("Failed to load vacancy details.", Severity.Error);
        }
    }

    private async Task SaveChanges()
    {
        var response = await Http.PutAsJsonAsync($"https://localhost:7270/api/InternshipVacancy/{vacancy.Id}", vacancy);
        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add("Internship vacancy updated successfully.", Severity.Success);
            BackToList();
        }
        else
        {
            Snackbar.Add("Error updating internship vacancy.", Severity.Error);
        }
    }

    private void BackToList()
    {
        NavigationManager.NavigateTo("/vacancies");
    }
}
